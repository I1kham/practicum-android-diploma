Index: app/src/main/java/ru/practicum/android/diploma/ui/search/SearchJobFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.practicum.android.diploma.ui.search\r\n\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport org.koin.androidx.viewmodel.ext.android.viewModel\r\nimport ru.practicum.android.diploma.R\r\nimport ru.practicum.android.diploma.databinding.FragmentSearchJobBinding\r\nimport ru.practicum.android.diploma.domain.models.entity.Vacancy\r\nimport ru.practicum.android.diploma.presentation.search.SearchJobViewModel\r\nimport ru.practicum.android.diploma.ui.search.adapters.VacancyAdapter\r\nimport ru.practicum.android.diploma.ui.search.models.VacanciesState\r\n\r\nclass SearchJobFragment : Fragment() {\r\n\r\n    private var binding: FragmentSearchJobBinding? = null\r\n    private val viewModel: SearchJobViewModel by viewModel()\r\n    private val vacancyAdapter = VacancyAdapter()\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        binding = FragmentSearchJobBinding.inflate(layoutInflater)\r\n        return binding?.root\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n        initEditText()\r\n        initRecyclerView()\r\n        observeViewModel()\r\n    }\r\n\r\n    private fun initEditText() {\r\n        binding?.searchEditText?.addTextChangedListener(object : TextWatcher {\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {\r\n                // функция не используется\r\n            }\r\n\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {\r\n                updateSearchIcon(s.isNullOrEmpty())\r\n                updateRecyclerView(emptyList())\r\n                viewModel.searchDebounce(s.toString())\r\n\r\n            }\r\n\r\n            override fun afterTextChanged(s: Editable?) {\r\n                // функция не используется\r\n                if (s?.isEmpty() == true) {\r\n                    clearRecyclerView()\r\n                }\r\n            }\r\n        })\r\n\r\n        binding?.clearSearchButton?.setOnClickListener {\r\n            binding?.searchEditText?.text?.clear()\r\n            viewModel.clearVacancies()\r\n        }\r\n    }\r\n\r\n    private fun initRecyclerView() {\r\n        binding?.vacanciesRecyclerView?.apply {\r\n            layoutManager = LinearLayoutManager(context)\r\n            adapter = vacancyAdapter\r\n        }\r\n    }\r\n\r\n    private fun observeViewModel() {\r\n        viewModel.vacanciesState.observe(viewLifecycleOwner) { state ->\r\n            when (state) {\r\n                is VacanciesState.Loading -> showLoading()\r\n                is VacanciesState.Error -> {\r\n                    hideLoading()\r\n                    showError(state.message)\r\n                }\r\n\r\n                is VacanciesState.Success -> {\r\n                    hideLoading()\r\n                    updateRecyclerView(state.vacancies)\r\n                }\r\n\r\n                is VacanciesState.Empty -> {\r\n                    hideLoading()\r\n                    showEmptyState()\r\n                }\r\n\r\n                is VacanciesState.Hidden -> clearRecyclerView()\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun clearRecyclerView() {\r\n        updateRecyclerView(emptyList())\r\n        showHiddenState()\r\n    }\r\n\r\n    private fun updateSearchIcon(isEmpty: Boolean) {\r\n        binding?.clearSearchButton?.setImageResource(\r\n            if (isEmpty) R.drawable.search_24px else R.drawable.close_24px\r\n        )\r\n    }\r\n\r\n    private fun showHiddenState() {\r\n        binding?.searchLayout?.visibility = View.VISIBLE\r\n        binding?.noInternetLayout?.visibility = View.GONE\r\n        binding?.noJobsLayout?.visibility = View.GONE\r\n    }\r\n\r\n    private fun showLoading() {\r\n        binding?.progressBar?.visibility = View.VISIBLE\r\n        binding?.searchLayout?.visibility = View.GONE\r\n        binding?.noInternetLayout?.visibility = View.GONE\r\n        binding?.noJobsLayout?.visibility = View.GONE\r\n        binding?.vacanciesRecyclerView?.visibility = View.GONE\r\n    }\r\n\r\n    private fun hideLoading() {\r\n        binding?.progressBar?.visibility = View.GONE\r\n    }\r\n\r\n    private fun showError(errorMessage: Int) {\r\n        binding?.vacanciesRecyclerView?.visibility = View.GONE\r\n        binding?.searchLayout?.visibility = View.GONE\r\n        binding?.noJobsLayout?.visibility = View.GONE\r\n        binding?.noInternetLayout?.visibility = View.VISIBLE\r\n    }\r\n\r\n    private fun showEmptyState() {\r\n        binding?.vacanciesRecyclerView?.visibility = View.GONE\r\n        binding?.searchLayout?.visibility = View.GONE\r\n        binding?.noInternetLayout?.visibility = View.GONE\r\n        binding?.noJobsLayout?.visibility = View.VISIBLE\r\n\r\n    }\r\n\r\n    private fun updateRecyclerView(vacancies: List<Vacancy>) {\r\n        binding?.vacanciesRecyclerView?.visibility = View.VISIBLE\r\n        binding?.noJobsLayout?.visibility = View.GONE\r\n        binding?.searchLayout?.visibility = View.GONE\r\n        binding?.noInternetLayout?.visibility = View.GONE\r\n        vacancyAdapter.submitList(vacancies)\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        binding = null\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ru/practicum/android/diploma/ui/search/SearchJobFragment.kt b/app/src/main/java/ru/practicum/android/diploma/ui/search/SearchJobFragment.kt
--- a/app/src/main/java/ru/practicum/android/diploma/ui/search/SearchJobFragment.kt	(revision dc98779c26a7ee651d468049c001e8d383430895)
+++ b/app/src/main/java/ru/practicum/android/diploma/ui/search/SearchJobFragment.kt	(date 1731617749515)
@@ -53,11 +53,19 @@
 
             override fun afterTextChanged(s: Editable?) {
                 // функция не используется
-                if (s?.isEmpty() == true) {
-                    clearRecyclerView()
-                }
+//                if (s?.isEmpty() == true) {
+//                    clearRecyclerView()
+//                }
+            }
+        })
+        binding?.searchEditText?.setOnFocusChangeListener { _, hasFocus ->
+            when {
+//            hasFocus && binding?.searchEditText?.text!!.isEmpty()-> {}
+
+//                hasFocus && binding?.searchEditText?.text!!.isNotEmpty() -> clearRecyclerView()
+
             }
-        })
+        }
 
         binding?.clearSearchButton?.setOnClickListener {
             binding?.searchEditText?.text?.clear()
